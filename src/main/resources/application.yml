spring.cloud.stream.bindings.output.contentType: application/json
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms: 1000
spring.cloud.stream.kafka.streams.binder.configuration:
  default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler

spring.cloud.stream.kafka.streams.binder.serde-error: logAndContinue

spring.cloud.stream.bindings.download-request:
  destination: download-request
  producer:
#    partitionCount: 10
    headerMode: raw

spring.cloud.stream.kafka.streams.binder:
  brokers: 192.168.2.61:32770, 192.168.2.61:32771
spring.kafka.bootstrap-servers: 192.168.2.61:32770, 192.168.2.61:32771

logging:
  level: info

spring.application.name: currency-conversion-service
server.port: 8080

bootstrap.kafka.servers: 192.168.2.61:32770, 192.168.2.61:32771
server.address: 192.168.2.61
spring:
  redis:
    host: localhost
    port: 32768
